library(CITAN)
test <- Scopus_ReadCSV(
"scopusPrimary.csv",
stopOnErrors = TRUE,
dbIdentifier = "Scopus",
alternativeIdPattern = "^.*\\id=|\\&.*$"
)
scopusPrimary <- test
scopusSecondary <- Scopus_ReadCSV(
"scopusPrimary.csv"stopOnErrors = TRUE,
scopusSecondary <- Scopus_ReadCSV(
"filename"scopusSecondary.csv",
scopusSecondary <- Scopus_ReadCSV(
"filename"scopusSecondary.csv",
scopusSecondary <- Scopus_ReadCSV(
"scopusSecondary.csv",
stopOnErrors = TRUE,
dbIdentifier = "Scopus",
alternativeIdPattern = "^.*\\id=|\\&.*$"
)
scopusSecondary <- Scopus_ReadCSV(
"scopusSecondary.csv",
stopOnErrors = FALSE,
dbIdentifier = "Scopus",
alternativeIdPattern = "^.*\\id=|\\&.*$"
)
library(biblionetwork)
library(bibliometrix)
biblioAnalysis(scopusPrimary)
biblioAnalysis(scopusPrimary, sep=",")
test <- convert2df(file = "scopusPrimary.csv", dbsource = 'scopus', format = "csv")
biblioAnalysis(test)
primaryAnalysis <- biblioAnalysis(test)
scopusPrimary <- test
scopusSecondary <- convert2df(file = "scopusSecondary.csv", dbsource = 'scopus', format = "csv")
secondaryAnalysis <- biblioAnalysis(scopusSecondary)
View(scopusSecondary)
secondaryAnalysis <- biblioAnalysis(scopusSecondary)
scopusSecondary <- convert2df(file = "scopusSecondary.csv", dbsource = 'scopus', format = "csv")
secondaryAnalysis <- biblioAnalysis(scopusSecondary)
scopusSecondary <- convert2df(file = "scopusSecondary.csv", dbsource = 'scopus', format = "csv")
secondaryAnalysis <- biblioAnalysis(scopusSecondary)
scopusPrimary <- convert2df(file = "scopusPrimary.csv", dbsource = 'scopus', format = "csv")
primaryAnalysis <- biblioAnalysis(scopusPrimary)
summary(primaryAnalysis, maxsum=5)
plot(primaryAnalysis)
secondaryAnalysis <- biblioAnalysis(scopusSecondary)
test <- concat(scopusPrimary, scopusSecondary)
import pandas as pd
test <- rbind(scopusPrimary, scopusSecondary)
mergedScopus <- test
scopusBiblio(mergedScopus)
scopusBiblio <- biblioAnalysis(mergedScopus)
summary(mergedScopus, maxsum=5)
summary(scopusBiblio, maxsum=5)
# Load database records
scopusPrimary <- convert2df(file = "scopusPrimary.csv", dbsource = 'scopus', format = "csv")
scopusSecondary <- convert2df(file = "scopusPrimary.csv", dbsource = 'scopus', format = "csv")
primaryAnalysis <- biblioAnalysis(scopusPrimary)
secondaryAnalysis <- biblioAnalysis(scopusSecondary)
# merge scopus records
mergedScopus <- rbind(scopusPrimary, scopusSecondary)
scopusBiblio <- biblioAnalysis(mergedScopus)
summary(scopusBiblio, max=5)
summary(scopusBiblio, max=10)
scopusBiblio <- biblioAnalysis(mergedScopus)
mergedScopus <- distinct(rbind(scopusPrimary, scopusSecondary))
us <- unique.data.frame(rbind(scopusPrimary, sco
;
mergedScopus <- unique.data.frame(rbind(scopusPrimary, scopusSecondary))
# Load database records
scopusPrimary <- convert2df(file = "scopusPrimary.csv", dbsource = 'scopus', format = "csv")
scopusSecondary <- convert2df(file = "scopusSecondary.csv", dbsource = 'scopus', format = "csv")
primaryAnalysis <- biblioAnalysis(scopusPrimary)
secondaryAnalysis <- biblioAnalysis(scopusSecondary)
rm(secondaryAnalysis)
mergedScopus <- unique.data.frame(rbind(scopusPrimary, scopusSecondary))
scopusBiblio <- biblioAnalysis(mergedScopus)
summary(scopusBiblio, max=5)
summary(scopusBiblio, max=10)
summary(scopusBiblio, max=15)
rm(test)
plots(scopusBiblio)
plot(scopusBiblio)
rm(primaryAnalysis)
plot(scopusBiblio)
ScopusNetMatrix <- biblioNetwork(scopusBiblio, analysis = "co-citation", network = "references", sep = ";")
ScopusNetMatrix <- biblioNetwork(mergedScopus, analysis = "co-citation", network = "references", sep = ";")
scopusPrimary <- convert2df(file = "scopusPrimary.csv", dbsource = 'scopus', format = "csv")
ScopusNetMatrix <- biblioNetwork(scopusPrimary, analysis = "co-citation", network = "references", sep = ";")
ScopusNetMatrix <- biblioNetwork(scopusPrimary, analysis = "co-citation", network = "authors", sep = ";")
ScopusNetMatrix <- biblioNetwork(scopusPrimary, analysis = "coupling", network = "authors", sep = ";")
ScopusNetMatrix <- biblioNetwork(mergedScopus, analysis = "coupling", network = "authors", sep = ";")
ScopusNetMatrix <- biblioNetwork(mergedScopus, analysis = "coupling", network = "authors")
ScopusNetMatrix <- biblioNetwork(mergedScopus)
biblioNetwork()
biblioNetwork
ScopusNetMatrix <- biblioNetwork(mergedScopus, analysis = "references")
ScopusNetMatrix <- biblioNetwork(mergedScopus, analysis = "collaboration")
Cholmod error 'X and/or Y have wrong dimensions' at file ../MatrixOps/cholmod_sdmult.c, line 88
net=networkPlot(ScopusNetMatrix, n = 50, Title = "Co-Citation Network", type = "fruchterman", size.cex=TRUE, size=20, remove.multiple=FALSE, labelsize=1,edgesize = 10, edges.min=5)
net=networkPlot(ScopusNetMatrix, n = 100, Title = "Co-Citation Network", type = "fruchterman", size.cex=TRUE, size=20, remove.multiple=FALSE, labelsize=1,edgesize = 10, edges.min=5)
net=networkPlot(ScopusNetMatrix, n = 100, Title = "Co-Citation Network", type = "fruchterman", size.cex=TRUE, size=20, remove.multiple=FALSE, labelsize=1,edgesize = 10, edges.min=2)
1
net=networkPlot(ScopusNetMatrix, n = 100, Title = "Co-Citation Network", type = "fruchterman", size.cex=TRUE, size=20, remove.multiple=FALSE, labelsize=1,edgesize = 10, edges.min=1)
net=networkPlot(ScopusNetMatrix, n = 50, Title = "Co-Citation Network", type = "fruchterman", size.cex=TRUE, size=20, remove.multiple=FALSE, labelsize=1,edgesize = 10, edges.min=1)
net=networkPlot(ScopusNetMatrix, n = 50, Title = "Co-Citation Network", type = "fruchterman", size.cex=TRUE, size=20, remove.multiple=FALSE, labelsize=1,edgesize = 10, edges.min=3)
net=networkPlot(ScopusNetMatrix, n = 50, Title = "Co-Citation Network", type = "fruchterman", size.cex=TRUE, size=20, remove.multiple=FALSE, labelsize=1,edgesize = 5, edges.min=2)
net=networkPlot(ScopusNetMatrix, n = 30, Title = "Co-Citation Network", type = "fruchterman", size.cex=TRUE, size=20, remove.multiple=FALSE, labelsize=1,edgesize = 5, edges.min=2)
ScopusNetMatrix <- biblioNetwork(mergedScopus, analysis = "citation")
ScopusNetMatrix <- biblioNetwork(mergedScopus, analysis = "co-citation")
scopusPrimary <- convert2df(file = "scopusPrimary.csv", dbsource = 'scopus', format = "csv")
scopusSecondary <- convert2df(file = "scopusSecondary.csv", dbsource = 'scopus', format = "csv")
# merge scopus records, removing dupes
mergedScopus <- unique.data.frame(rbind(scopusPrimary, scopusSecondary))
scopusBiblio <- biblioAnalysis(mergedScopus)
# output summary results
summary(scopusBiblio, max=5)
plot(scopusBiblio)
# Co-citation network
ScopusNetMatrix <- biblioNetwork(mergedScopus, analysis = "co-citation", network = "references", sep = ";")
net=networkPlot(ScopusNetMatrix, n = 50, Title = "Co-Citation Network", type = "fruchterman", size.cex=TRUE, size=20, remove.multiple=FALSE, labelsize=1,edgesize = 10, edges.min=5)
net=networkPlot(ScopusNetMatrix, n = 50, Title = "Co-Citation Network", type = "fruchterman", size.cex=TRUE, size=20, remove.multiple=FALSE, labelsize=1,edgesize = 5, edges.min=3)
net=networkPlot(ScopusNetMatrix, n = 50, Title = "Co-Citation Network", type = "fruchterman", size.cex=TRUE, size=20, remove.multiple=FALSE, labelsize=1,edgesize = 15, edges.min=3)
net=networkPlot(ScopusNetMatrix, n = 50, Title = "Co-Citation Network", type = "fruchterman", size.cex=TRUE, size=20, remove.multiple=FALSE, labelsize=1,edgesize = 25, edges.min=3)
net=networkPlot(ScopusNetMatrix, n = 50, Title = "Co-Citation Network", type = "fruchterman", size.cex=TRUE, size=20, remove.multiple=FALSE, labelsize=1,edgesize = 5, edges.min=4)
net=networkPlot(ScopusNetMatrix, n = 50, Title = "Co-Citation Network", type = "fruchterman", size.cex=TRUE, size=20, remove.multiple=FALSE, labelsize=1,edgesize = 5, edges.min=0)
net=networkPlot(ScopusNetMatrix, n = 310, Title = "Co-Citation Network", type = "fruchterman", size.cex=TRUE, size=20, remove.multiple=FALSE, labelsize=1,edgesize = 5, edges.min=0)
net=networkPlot(ScopusNetMatrix, n = 310, Title = "Co-Citation Network", type = "fruchterman", size.cex=TRUE, size=20, remove.multiple=FALSE, labelsize=1,edgesize = 5, edges.min=1)
net=networkPlot(ScopusNetMatrix, n = 310, Title = "Co-Citation Network", type = "fruchterman", size.cex=TRUE, size=20, remove.multiple=FALSE, labelsize=1,edgesize = 5, edges.min=2)
net=networkPlot(ScopusNetMatrix, n = 300, Title = "Co-Citation Network", type = "fruchterman", size.cex=TRUE, size=20, remove.multiple=FALSE, labelsize=1,edgesize = 5, edges.min=2)
net=networkPlot(ScopusNetMatrix, n = 310, Title = "Co-Citation Network", type = "fruchterman", size.cex=TRUE, size=20, remove.multiple=FALSE, labelsize=1,edgesize = 5, edges.min=3)
net=networkPlot(ScopusNetMatrix, n = 100, Title = "Co-Citation Network", type = "fruchterman", size.cex=TRUE, size=20, remove.multiple=FALSE, labelsize=1,edgesize = 5, edges.min=3)
2
net=networkPlot(ScopusNetMatrix, n = 20, Title = "Co-Citation Network", type = "fruchterman", size.cex=TRUE, size=20, remove.multiple=FALSE, labelsize=1,edgesize = 5, edges.min=3)
net=networkPlot(ScopusNetMatrix, n = 50, Title = "Co-Citation Network", type = "fruchterman", size.cex=TRUE, size=20, remove.multiple=FALSE, labelsize=1,edgesize = 5, edges.min=2)
net=networkPlot(ScopusNetMatrix, n = 100, Title = "Co-Citation Network", type = "fruchterman", size.cex=TRUE, size=20, remove.multiple=FALSE, labelsize=1,edgesize = 5, edges.min=2)
net=networkPlot(ScopusNetMatrix, n = 100, Title = "Co-Citation Network", type = "fruchterman", size.cex=TRUE, size=20, remove.multiple=FALSE, labelsize=1,edgesize = 5, edges.min=1)
net=networkPlot(ScopusNetMatrix, n = 150, Title = "Co-Citation Network", type = "fruchterman", size.cex=TRUE, size=20, remove.multiple=FALSE, labelsize=1,edgesize = 5, edges.min=1)
net=networkPlot(ScopusNetMatrix, n = 150, Title = "Co-Citation Network", type = "fruchterman", size.cex=TRUE, size=20, remove.multiple=FALSE, labelsize=1,edgesize = 5, edges.min=2)
net=networkPlot(ScopusNetMatrix, n = 200, Title = "Co-Citation Network", type = "fruchterman", size.cex=TRUE, size=20, remove.multiple=FALSE, labelsize=1,edgesize = 5, edges.min=2)
net=networkPlot(ScopusNetMatrix, n = 50, Title = "Co-Citation Network", type = "fruchterman", size.cex=TRUE, size=20, remove.multiple=FALSE, labelsize=1,edgesize = 5, edges.min=2)
net=networkPlot(ScopusNetMatrix, n = 100, Title = "Co-Citation Network", type = "fruchterman", size.cex=TRUE, size=20, remove.multiple=FALSE, labelsize=1,edgesize = 5, edges.min=2)
net=networkPlot(ScopusNetMatrix, n = 25, Title = "Co-Citation Network", type = "fruchterman", size.cex=TRUE, size=20, remove.multiple=FALSE, labelsize=1,edgesize = 5, edges.min=2)
net=networkPlot(ScopusNetMatrix, n = 20, Title = "Co-Citation Network", type = "fruchterman", size.cex=TRUE, size=20, remove.multiple=FALSE, labelsize=1,edgesize = 5, edges.min=2)
net=networkPlot(ScopusNetMatrix, n = 100, Title = "Co-Citation Network", type = "fruchterman", size.cex=TRUE, size=20, remove.multiple=FALSE, labelsize=1,edgesize = 5, edges.min=2)
net=networkPlot(ScopusNetMatrix, n = 50, Title = "Co-Citation Network", type = "fruchterman", size.cex=TRUE, size=20, remove.multiple=FALSE, labelsize=1,edgesize = 5, edges.min=2)
net=networkPlot(ScopusNetMatrix, n = 100, Title = "Co-Citation Network", type = "fruchterman", size.cex=TRUE, size=20, remove.multiple=FALSE, labelsize=1,edgesize = 5, edges.min=2)
net=networkPlot(ScopusNetMatrix, n = 75, Title = "Co-Citation Network", type = "fruchterman", size.cex=TRUE, size=20, remove.multiple=FALSE, labelsize=1,edgesize = 5, edges.min=2)
net=networkPlot(ScopusNetMatrix, n = 75, Title = "Co-Citation Network", type = "kamada", size.cex=TRUE, size=20, remove.multiple=FALSE, labelsize=1,edgesize = 5, edges.min=2)
net=networkPlot(ScopusNetMatrix, n = 75, Title = "Co-Citation Network",  size.cex=TRUE, size=20, remove.multiple=FALSE, labelsize=1,edgesize = 5, edges.min=2)
net=networkPlot(ScopusNetMatrix, n = 75, Title = "Co-Citation Network",  size.cex=TRUE, type="circle" size=20, remove.multiple=FALSE, labelsize=1,edgesize = 5, edges.min=2)
net=networkPlot(ScopusNetMatrix, n = 75, Title = "Co-Citation Network",  size.cex=TRUE, type="circle", size=20, remove.multiple=FALSE, labelsize=1,edgesize = 5, edges.min=2)
net=networkPlot(ScopusNetMatrix, n = 75, Title = "Co-Citation Network",  size.cex=TRUE, type="mds", size=20, remove.multiple=FALSE, labelsize=1,edgesize = 5, edges.min=2)
net=networkPlot(ScopusNetMatrix, n = 75, Title = "Co-Citation Network",  size.cex=TRUE, size=20, remove.multiple=FALSE, labelsize=1,edgesize = 5, edges.min=2)
net=networkPlot(ScopusNetMatrix, n = 75, Title = "Co-Citation Network",  size.cex=TRUE, size=20, remove.multiple=FALSE, labelsize=1,edgesize = 5, edges.min=3)
net=networkPlot(ScopusNetMatrix, n = 100, Title = "Co-Citation Network",  size.cex=TRUE, size=20, remove.multiple=FALSE, labelsize=1,edgesize = 5, edges.min=2)
net=networkPlot(ScopusNetMatrix, n = 100, Title = "Co-Citation Network",  size.cex=TRUE, size=50, remove.multiple=FALSE, labelsize=1,edgesize = 5, edges.min=2)
net=networkPlot(ScopusNetMatrix, n = 20, Title = "Co-Citation Network",  size.cex=TRUE, size=50, remove.multiple=FALSE, labelsize=1,edgesize = 5, edges.min=2)
net=networkPlot(ScopusNetMatrix, n = 20, Title = "Co-Citation Network",  size.cex=TRUE, size=20, remove.multiple=FALSE, labelsize=1,edgesize = 5, edges.min=2)
net=networkPlot(ScopusNetMatrix, n = 20, Title = "Co-Citation Network",  size.cex=TRUE, size=20, remove.multiple=TRUE, labelsize=1,edgesize = 5, edges.min=2)
net=networkPlot(ScopusNetMatrix, n = 50, Title = "Co-Citation Network",  size.cex=TRUE, size=20, remove.multiple=TRUE, labelsize=1,edgesize = 5, edges.min=2)
net=networkPlot(ScopusNetMatrix, n = 75, Title = "Co-Citation Network",  size.cex=TRUE, size=20, remove.multiple=TRUE, labelsize=1,edgesize = 5, edges.min=2)
net=networkPlot(ScopusNetMatrix, n = 100, Title = "Co-Citation Network",  size.cex=TRUE, size=20, remove.multiple=TRUE, labelsize=1,edgesize = 5, edges.min=2)
net=networkPlot(ScopusNetMatrix, n = 100, Title = "Co-Citation Network",  size.cex=TRUE, size=20, remove.multiple=TRUE, labelsize=1,edgesize = 3, edges.min=2)
netstat <- networkStat(ScopusNetMatrix)
summary(netstat,k=10)
extract=metaTagExtraction(mergedScopus,"CR_SO",sep=";")
ScopusSourceNetMatrix <- biblioNetwork(extract, analysis = "co-citation", network = "sources", sep = ";")
net=networkPlot(ScopusSourceNetMatrix, n = 50, Title = "Co-Citation Network", type = "auto", size.cex=TRUE, size=15, remove.multiple=FALSE, labelsize=1,edgesize = 10, edges.min=5)
net=networkPlot(ScopusSourceNetMatrix, n = 50, Title = "Co-Citation Network", type = "auto", size.cex=TRUE, size=15, remove.multiple=FALSE, labelsize=1,edgesize = 10, edges.min=3)
net=networkPlot(ScopusSourceNetMatrix, n = 50, Title = "Co-Citation Network", type = "auto", size.cex=TRUE, size=15, remove.multiple=FALSE, labelsize=1,edgesize = 5, edges.min=3)
net=networkPlot(ScopusSourceNetMatrix, n = 50, Title = "Co-Citation Network", type = "auto", size.cex=TRUE, size=15, remove.multiple=FALSE, labelsize=1,edgesize = 5, edges.min=2)
net=networkPlot(ScopusSourceNetMatrix, n = 50, Title = "Co-Citation Network", type = "auto", size.cex=TRUE, size=15, remove.multiple=FALSE, labelsize=1,edgesize = 5, edges.min=4)
net=networkPlot(ScopusSourceNetMatrix, n = 50, Title = "Co-Citation Network", type = "auto", size.cex=TRUE, size=15, remove.multiple=FALSE, labelsize=1,edgesize = 5, edges.min=3)
net=networkPlot(ScopusSourceNetMatrix, n = 10, Title = "Co-Citation Network", type = "auto", size.cex=TRUE, size=15, remove.multiple=FALSE, labelsize=1,edgesize = 5, edges.min=3)
net=networkPlot(ScopusSourceNetMatrix, n = 20, Title = "Co-Citation Network", type = "auto", size.cex=TRUE, size=15, remove.multiple=FALSE, labelsize=1,edgesize = 5, edges.min=3)
net=networkPlot(ScopusSourceNetMatrix, n = 20, Title = "Co-Citation Network", type = "auto", size.cex=TRUE, size=15, remove.multiple=FALSE, labelsize=1,edgesize = 5, edges.min=2)
net=networkPlot(ScopusSourceNetMatrix, n = 10, Title = "Co-Citation Network", type = "auto", size.cex=TRUE, size=15, remove.multiple=FALSE, labelsize=1,edgesize = 5, edges.min=2)
net=networkPlot(ScopusSourceNetMatrix, n = 5, Title = "Co-Citation Network", type = "auto", size.cex=TRUE, size=15, remove.multiple=FALSE, labelsize=1,edgesize = 5, edges.min=2)
net=networkPlot(ScopusSourceNetMatrix, n = 15, Title = "Co-Citation Network", type = "auto", size.cex=TRUE, size=15, remove.multiple=FALSE, labelsize=1,edgesize = 5, edges.min=2)
net=networkPlot(ScopusSourceNetMatrix, n = 5, Title = "Co-Citation Network", type = "auto", size.cex=TRUE, size=15, remove.multiple=FALSE, labelsize=1,edgesize = 5, edges.min=2)
histResults <- histNetwork(mergedScopus, sep = ";")
options(width = 130)
net <- histPlot(histResults, n=20, size = 5, labelsize = 4)
net <- histPlot(histResults, n=100, size = 5, labelsize = 4)
net <- histPlot(histResults, n=200, size = 25, labelsize = 4)
net <- histPlot(histResults, n=200, size = 2, labelsize = 4)
net <- histPlot(histResults, n=50, size = 2, labelsize = 4)
keywordMatric <- biblioNetwork(mergedScopus, analysis = "co-occurrences", network = "keywords", sep = ";")
net=networkPlot(keywordMatrix, normalize="association", n = 50, Title = "Keyword Co-occurrences", type = "fruchterman", size.cex=TRUE, size=20, remove.multiple=F, edgesize = 10, labelsize=5,label.cex=TRUE,label.n=30,edges.min=2)
keywordMatrix <- biblioNetwork(mergedScopus, analysis = "co-occurrences", network = "keywords", sep = ";")
net=networkPlot(keywordMatrix, normalize="association", n = 50, Title = "Keyword Co-occurrences", type = "fruchterman", size.cex=TRUE, size=20, remove.multiple=F, edgesize = 10, labelsize=5,label.cex=TRUE,label.n=30,edges.min=2)
rm(keywordMatric)
net=networkPlot(keywordMatrix, normalize="association", n = 20, Title = "Keyword Co-occurrences", type = "fruchterman", size.cex=TRUE, size=10, remove.multiple=F, edgesize = 10, labelsize=5,label.cex=TRUE,label.n=30,edges.min=2)
net=networkPlot(keywordMatrix, normalize="association", n = 20, Title = "Keyword Co-occurrences", type = "fruchterman", size.cex=TRUE, size=10, remove.multiple=F, edgesize = 10, labelsize=5,label.cex=TRUE,label.n=30,edges.min=1)
net=networkPlot(keywordMatrix, normalize="association", n = 20, Title = "Keyword Co-occurrences", type = "fruchterman", size.cex=TRUE, size=20, remove.multiple=F, edgesize = 10, labelsize=5,label.cex=TRUE,label.n=30,edges.min=2)
net=networkPlot(keywordMatrix, normalize="association", n = 50, Title = "Keyword Co-occurrences", type = "fruchterman", size.cex=TRUE, size=10, remove.multiple=F, edgesize = 10, labelsize=5,label.cex=TRUE,label.n=30,edges.min=2)
net=networkPlot(keywordMatrix, normalize="association", n = 150, Title = "Keyword Co-occurrences", type = "fruchterman", size.cex=TRUE, size=10, remove.multiple=F, edgesize = 10, labelsize=5,label.cex=TRUE,label.n=30,edges.min=2)
net=networkPlot(keywordMatrix, normalize="association", n = 150, Title = "Keyword Co-occurrences", type = "fruchterman", size.cex=TRUE, size=10, remove.multiple=F, edgesize = 10, labelsize=5,label.cex=FALSE,label.n=30,edges.min=2)
net=networkPlot(keywordMatrix, normalize="association", n = 150, Title = "Keyword Co-occurrences", type = "fruchterman", size.cex=TRUE, size=10, remove.multiple=F, edgesize = 10, labelsize=1,label.cex=FALSE,label.n=30,edges.min=2)
suppressWarnings(
CS <- conceptualStructure(mergedScopus, method="MCA", field="ID", minDegree=15, clust=5, stemming=FALSE, labelsize=15,documents=20)
)
suppressWarnings(
CS <- conceptualStructure(mergedScopus, method="MCA", field="ID", minDegree=15, clust=5, stemming=FALSE, labelsize=15,documents=10)
)
suppressWarnings(
CS <- conceptualStructure(mergedScopus, method="MCA", field="ID", minDegree=15, clust=5, stemming=FALSE, labelsize=15,documents=20)
)
suppressWarnings(
CS <- conceptualStructure(mergedScopus, method="MCA", field="ID", minDegree=15, clust=3, stemming=FALSE, labelsize=15,documents=40)
)
Map=thematicMap(mergedScopus, field = "ID", n = 250, minfreq = 4,
stemming = FALSE, size = 0.7, n.labels=5, repel = TRUE)
Map=thematicMap(mergedScopus, field = "ID", n = 250, minfreq = 4, stemming = FALSE, size = 0.7, n.labels=5, repel = TRUE)
plot(Map$map)
Clusters=Map$words[order(Map$words$Cluster,-Map$words$Occurrences),]
library(dplyr)
CL <- Clusters %>% group_by(.data$Cluster_Label) %>% top_n(5, .data$Occurrences)
CL
CL.print(n=40)
print(CL, n=40)
print(CL, n=40)
NetMatrix <- biblioNetwork(mergedScopus, analysis = "collaboration",  network = "authors", sep = ";")
net=networkPlot(NetMatrix,  n = 50, Title = "Author collaboration",type = "auto", size=10,size.cex=T,edgesize = 3,labelsize=1)
NetMatrix <- biblioNetwork(mergedScopus, analysis = "collaboration",  network = "authors", sep = ";")
+
,
;
))
net=networkPlot(NetMatrix,  n = 20, Title = "Author collaboration",type = "auto", size=10,size.cex=T,edgesize = 3,labelsize=1)
net=networkPlot(NetMatrix,  n = 20, Title = "Author collaboration",type = "auto", size=10,size.cex=T,edgesize = 3,labelsize=3)
net=networkPlot(NetMatrix,  n = 20, Title = "Author collaboration",type = "auto", size=10,size.cex=T,edgesize = 3,labelsize=2)
net=networkPlot(NetMatrix,  n = 20, Title = "Author collaboration",type = "auto", size=10,size.cex=T,edgesize = 3,labelsize=1)
net=networkPlot(NetMatrix,  n = 50, Title = "Author collaboration",type = "auto", size=10,size.cex=T,edgesize = 3,labelsize=1)
net=networkPlot(NetMatrix,  n = 50, Title = "Author collaboration",type = "fruchterman", size=10,size.cex=T,edgesize = 3,labelsize=1)
net=networkPlot(NetMatrix,  n = 50, Title = "Author collaboration",type = "circle", size=10,size.cex=T,edgesize = 3,labelsize=1)
wos <- convert2df(file = "wos.txt", dbsource = 'wos', format = "txt")
wos <- convert2df(file = "wos.txt", dbsource = 'wos', format = "plaintext")
mergedScopusWOS <- unique.data.frame(rbind(mergedScopus, wos))
View(wos)
intersect(names(mergedScopus), names(wos))
intersect(names(mergedScopus), names(wos))
commonCols <- intersect(names(mergedScopus), names(wos))
test <- mergedScopus[c(commonCols)]
test2 <- wos[c(commonCols)]
mergedScopusWOS <- unique.data.frame(rbind(test, test2))
biblioAnalysis(mergedScopusWOS)
summary(biblioAnalysis(mergedScopusWOS))
mergedCleanedScopusWOS = mergedScopusWOS.drop_duplicates(subset=['DI'])
mergedCleanedScopusWOS = mergedScopusWOS[!duplicated(mergedScopusWOS[,c('DI')]),]
rm(mergedCleanedScopusWOS)
View(mergedScopusWOS)
mergedCleanedScopusWOS = mergedScopusWOS[!duplicated(mergedScopusWOS[,c('DI')]),]
View(mergedCleanedScopusWOS)
